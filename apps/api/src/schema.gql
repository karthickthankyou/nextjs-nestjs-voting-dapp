# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Personality {
  id: Int!
  name: String!
  upvotes: Int!
  downvotes: Int!
  creator: String!
}

type Vote {
  id: Int!
  name: String!
  vote: Int!
  voter: String!
  personalityId: Int!
}

type Query {
  personalities(where: PersonalityWhereInput, orderBy: [PersonalityOrderByWithRelationInput!], cursor: PersonalityWhereUniqueInput, take: Int, skip: Int, distinct: [PersonalityScalarFieldEnum!]): [Personality!]!
  personality(where: PersonalityWhereUniqueInput): Personality!
  votes(where: VoteWhereInput, orderBy: [VoteOrderByWithRelationInput!], cursor: VoteWhereUniqueInput, take: Int, skip: Int, distinct: [VoteScalarFieldEnum!]): [Vote!]!
  vote(where: VoteWhereUniqueInput): Vote!
}

input PersonalityWhereInput {
  creator: StringFilter
  votes: VoteListRelationFilter
  id: IntFilter
  name: StringFilter
  upvotes: IntFilter
  downvotes: IntFilter
  AND: [PersonalityWhereInput!]
  OR: [PersonalityWhereInput!]
  NOT: [PersonalityWhereInput!]
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: String
  mode: QueryMode
}

enum QueryMode {
  default
  insensitive
}

input VoteListRelationFilter {
  every: VoteWhereInput
  some: VoteWhereInput
  none: VoteWhereInput
}

input VoteWhereInput {
  id: IntFilter
  name: StringFilter
  vote: IntFilter
  voter: StringFilter
  personalityId: IntFilter
  personality: PersonalityRelationFilter
  AND: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  NOT: [VoteWhereInput!]
}

input IntFilter {
  equals: Int
  in: Int
  notIn: Int
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: Int
}

input PersonalityRelationFilter {
  is: PersonalityWhereInput
  isNot: PersonalityWhereInput
}

input PersonalityOrderByWithRelationInput {
  creator: SortOrder
  id: SortOrder
  name: SortOrder
  upvotes: SortOrder
  downvotes: SortOrder
  votes: VoteOrderByRelationAggregateInput
}

enum SortOrder {
  asc
  desc
}

input VoteOrderByRelationAggregateInput {
  _count: SortOrder
}

input PersonalityWhereUniqueInput {
  id: Int
  name: String
}

enum PersonalityScalarFieldEnum {
  id
  name
  upvotes
  downvotes
  creator
}

input VoteOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  vote: SortOrder
  voter: SortOrder
  personalityId: SortOrder
  personality: PersonalityOrderByWithRelationInput
}

input VoteWhereUniqueInput {
  name_voter: VoteNameVoterCompoundUniqueInput
  id: Int
}

input VoteNameVoterCompoundUniqueInput {
  name: String!
  voter: String!
}

enum VoteScalarFieldEnum {
  id
  name
  vote
  voter
  personalityId
}